package cc.haoduoyu.umaru.utils.ui;

import android.content.Context;

import com.apkfuns.logutils.LogUtils;

import java.util.ArrayList;
import java.util.List;

import cc.haoduoyu.umaru.R;
import cc.haoduoyu.umaru.model.Weather;
import lecho.lib.hellocharts.model.Axis;
import lecho.lib.hellocharts.model.AxisValue;
import lecho.lib.hellocharts.model.Line;
import lecho.lib.hellocharts.model.LineChartData;
import lecho.lib.hellocharts.model.PointValue;
import lecho.lib.hellocharts.model.Viewport;
import lecho.lib.hellocharts.view.LineChartView;

/**
 * Created by XP on 2016/3/21.
 */
public class ChartUtils {


    public static void showChart(Context context, LineChartView chartView, Weather.HeWeather heWeather) {
        List<AxisValue> axisValues = new ArrayList<>();//轴线
        List<PointValue> maxValues = new ArrayList<>();//最大值
        List<PointValue> minValues = new ArrayList<>();//最小值

        for (int i = 0; i < 7; ++i) {
            maxValues.add(new PointValue(i, Float.parseFloat(heWeather.getDailyForecast().get(i).getTmp().getMax())));
            minValues.add(new PointValue(i, Float.parseFloat(heWeather.getDailyForecast().get(i).getTmp().getMin())));
        }

        axisValues.add(new AxisValue(0).setLabel(context.getString(R.string.today)));
        axisValues.add(new AxisValue(1).setLabel(context.getString(R.string.tomorrow)));
        axisValues.add(new AxisValue(2).setLabel(context.getString(R.string.after_tomorrow)));
        for (int i = 3; i < 6; ++i) {
            axisValues.add(new AxisValue(i).setLabel(heWeather.getDailyForecast().get(i).getDate().substring(5)));
        }

        Line maxLine = new Line(maxValues);
        maxLine.setColor(lecho.lib.hellocharts.util.ChartUtils.COLOR_RED).setCubic(true).setHasPoints(true);
        maxLine.setHasLabelsOnlyForSelected(true);

        Line minLine = new Line(minValues);
        minLine.setColor(lecho.lib.hellocharts.util.ChartUtils.COLOR_BLUE).setCubic(true).setHasPoints(true);
        minLine.setHasLabelsOnlyForSelected(true);


        List<Line> lines = new ArrayList<>();
        lines.add(maxLine);
        lines.add(minLine);

        LineChartData lineData;
        lineData = new LineChartData(lines);
        lineData.setAxisXBottom(new Axis(axisValues));//设置x轴
        lineData.setAxisYLeft(new Axis().setAutoGenerated(true));
//                .setFormatter(new SimpleAxisValueFormatter().setAppendedText(getString(R.string.tmp_formatter).toCharArray())));//设置y轴


        chartView.setLineChartData(lineData);
        chartView.setValueSelectionEnabled(true);//点击显示数值并且不消失
        chartView.setZoomEnabled(false);//双击放大

        //防止线条溢出
        final Viewport v = new Viewport(chartView.getMaximumViewport());
        LogUtils.d(v);
        v.top += 1;
        v.bottom -= 1;
        chartView.setMaximumViewport(v);
        chartView.setCurrentViewport(v);
        chartView.setViewportCalculationEnabled(false);


        for (Line line : lineData.getLines()) {
            for (PointValue value : line.getValues()) {
                value.setTarget(value.getX(), value.getY());
            }
        }
        chartView.startDataAnimation(300);
    }
}
